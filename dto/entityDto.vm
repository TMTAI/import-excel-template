#parse("/include/packages_variables.vm")
#parse("/include/init_var_entity.vm")
#parse("/include/java_header.vm")
package ${target.javaPackageFromFolder(${SRC})};

#foreach( $import in $java.imports($entity.attributes) )
import $import;
#end

import vn.com.unit.dms.annotation.ExcelImportField;
import vn.com.unit.dms.annotation.ExcelImportTable;
import vn.com.unit.dms.enumdef.DataTypeEnum;

##--------------------------------------------------------------------------------------------------------
## Data fields = fields not in Primary Key and not in selected Links    
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )


/**
 * Domain class for entity "${entity.name}Dto"
 *
 * @author telosys
 *
 */

@SuppressWarnings("rawtypes")
@ExcelImportTable(tableName = "${entity.databaseTable}")
public class ${entity.name}Dto extends ImportCommonDto {
#foreach( $field in $entity.keyAttributes )
    private Long $field.formattedName(0);
#end

#foreach( $field in $dataFields )
#if($field.formattedName(0) != 'deletedBy' && $field.formattedName(0) != 'deletedDate' 
&& $field.formattedName(0) != 'createdBy'&& $field.formattedName(0) != 'createdDate' 
&& $field.formattedName(0) != 'updatedDate' && $field.formattedName(0) != 'updatedBy'
&& $field.formattedName(0) != 'deleteFlag' && $field.formattedName(0) != 'validFlag' 
&& $field.formattedName(0) != 'companyCode' && $field.formattedName(0) != 'isError' 
&& $field.formattedName(0) != 'status' && $field.formattedName(0) != 'refId'
&& $field.formattedName(0) != 'refVersionData' && $field.formattedName(0) != 'sessionKey')
	@ExcelImportField(colName = "$field.databaseName", colType = DataTypeEnum.$fn.toUpperCase($field.formattedType(0)))
    private $field.formattedType(0) $field.formattedName(0);

#end
#end

#foreach( $attribute in $entity.keyAttributes )
    public void ${attribute.setter}( Long $attribute.name ) {
        this.$attribute.name = $attribute.name ;
    }
    public Long ${attribute.getter}() {
        return this.$attribute.name;
    }

#end

#foreach( $attribute in $dataFields )
#if($attribute.formattedName(0) != 'deletedBy' && $attribute.formattedName(0) != 'deletedDate' 
&& $attribute.formattedName(0) != 'createdBy'&& $attribute.formattedName(0) != 'createdDate' 
&& $attribute.formattedName(0) != 'updatedDate' && $attribute.formattedName(0) != 'updatedBy'
&& $attribute.formattedName(0) != 'deleteFlag' && $attribute.formattedName(0) != 'validFlag' 
&& $attribute.formattedName(0) != 'companyCode' && $attribute.formattedName(0) != 'isError' 
&& $attribute.formattedName(0) != 'status' && $attribute.formattedName(0) != 'refId'
&& $attribute.formattedName(0) != 'refVersionData' && $attribute.formattedName(0) != 'sessionKey')

    public void ${attribute.setter}( $attribute.type $attribute.name ) {
        this.$attribute.name = $attribute.name ;
    } 

    public $attribute.type ${attribute.getter}() {
        return this.$attribute.name;
    }

#end
#end
}
