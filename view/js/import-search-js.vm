#set( $nameLC = ${entity.name.toLowerCase()} )
#set ($error = '"#error"')

${DOLLAR}(function(){
	var boxMain = 'fmUpload';
	var fileFilelist = 'fileFilelist';
	var fileConsole = 'fileConsole';
	var filePick = 'filePick';
	var fileContainer = 'fileContainer';
	
	initFileUploader(CONTROLLER_URL, boxMain, filePick, fileContainer, fileFilelist, fileConsole, function(out){
	})
});

function initFileUploader(CONTROLLER_URL, boxMain, filePick, fileContainer, fileFileList, fileConsole, callback) {
	var uploadUrl = BASE_URL + CONTROLLER_URL + "/upload-template-excel";
	var files = filePick;
	var fileContainer = fileContainer;
	var fileMaxFileSize = '100mb';
	var fileMimeTypes = [ {
		title : "Excel files",
		extensions : "xlsx,xls,xlsm"
	} ];
	var resize = {
		width : 1366,
		height : 320
	};
	var fileFileList = fileFileList;
	var fileConsole = fileConsole;
	
	// file upload
	var fileFileUploaded = function(up, file, info) {
		let breadcrumb = ${DOLLAR}('#breadcrumb').find('span').text();
		var content = ${DOLLAR}(info.response).find('.body-content');
		
		${DOLLAR}(".main_content").html(content);
		${DOLLAR}('#breadcrumb').append('<span>' + breadcrumb + '</span>');
		
		if (${DOLLAR}($error).val() !== ""){
			${DOLLAR}('#' + fileConsole).html(${DOLLAR}($error).val());
			${DOLLAR}("#" + fileConsole).show();
		}
		
		unblockbg();
	};

	// file upload process
	var fileUploadProgress = function(up, files) {
		${DOLLAR}("#" + boxMain).find("." + fileConsole).hide();
	    blockbg();
	};
	
	// file upload complete
	var fileUploadComplete = function(up, files, info) {
        
        window.history.pushState('', '', BASE_URL + CONTROLLER_URL + "/list");
        
		unblockbg();
	};

	var uploadFile = function (up, file){
		up.setOption("params",{
			"fieldSearch" : ${DOLLAR}('#fieldSearchHidd').val() !== undefined ? ${DOLLAR}('#fieldSearchHidd').val() : "",
			"fieldValues" : ${DOLLAR}('#fieldValuesHidd').val() !== undefined ? ${DOLLAR}('#fieldValuesHidd').val() : ""
		});
	};

	InitImportFileByChunKForMulti(files, fileContainer, uploadUrl, false, fileMaxFileSize, fileMimeTypes, fileFileList,
			fileConsole, fileFileUploaded, fileUploadComplete, BASE_URL, fileUploadProgress, boxMain, uploadFile);
}

function InitImportFileByChunKForMulti(browse_button, container, uploadUrl, multi_selection, max_file_size, mime_types,
	filelist, console, FileUploaded, UploadComplete, url, uploadProgress, boxTable, UploadFile) {
	var token = ${DOLLAR}("meta[name='_csrf']").attr("content");
	var uploader = new plupload.Uploader({
		runtimes: 'html5,flash,silverlight,html4',

		browse_button: browse_button, // id
		container: container,
		// itself

		url: uploadUrl,

		// Resize images on client-side if we can
		resize: {},

		headers: {
			'X-CSRF-TOKEN': token
		},

		multi_selection: multi_selection,

		chunk_size: "3mb",

		filters: {
			max_file_size: max_file_size,
			mime_types: mime_types
		},

		// Flash settings
		flash_swf_url: url + 'static/js/plupload-3.1.2/Moxie.swf',

		// Silverlight settings
		silverlight_xap_url: url + 'static/js/plupload-3.1.2/Moxie.xap',

		init: {
			PostInit: function () {
				// $("#" + boxTable).find("." + filelist).innerHTML = '';
			},

			FilesAdded: function (up, files) {
				// multi_selection is false
				if (!multi_selection) {
					// set empty fileList
					${DOLLAR}("#" + boxTable).find("." + filelist).empty();
				}
				plupload.each(files, function (file) {
					${DOLLAR}("#" + boxTable).find("." + filelist).innerHTML += '<div id="' + file.id + '">' + file.name + ' ('
						+ plupload.formatSize(file.size) + ') <b></b></div>';
				});

				${DOLLAR}("#" + boxTable).find("." + filelist).show();
				uploader.start(); // auto start when FilesAdded
			},

			UploadProgress: uploadProgress,

			Error: function (up, err) {
				switch (err.code) {
					case plupload.FILE_EXTENSION_ERROR:
						document.getElementById(console).innerHTML = ERROR_FILE_EXTENSTION;
						${DOLLAR}("#" + console).show();
						break;
					default:
						document.getElementById(console).innerHTML = "\nError #" + err.code + ": " + err.message;
						${DOLLAR}("#" + console).show();
						break;
				}
			},

			UploadFile : UploadFile,
			FileUploaded: FileUploaded,
			UploadComplete: UploadComplete
		}
	});

	uploader.init();
}